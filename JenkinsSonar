pipeline {
    agent any

    tools {
        maven 'maven3' 
    }

    stages {
        stage('git checkout'){
            steps{
                git credentialsId: 'GitHub', url: 'https://github.com/mahi-442/Jenkins'
            }
        }
        stage('maven build') {
            steps{
                sh 'mvn clean package'
            }
        }
        stage('upload to nexus') {
            steps {
                script{

                    def pomfile = readMavenPom file: 'pom.xml'
                    def version = pomfile.version
                    def nexusrepo = version.endsWith("SNAPSHOT") ? "hue-snapshot" : "hue-release"
                    nexusArtifactUploader artifacts: [[artifactId: 'hue', classifier: '', file: 'target/hue.war', type: 'war']], 
                    credentialsId: 'Nexus', 
                    groupId: 'in.javahome', 
                    nexusUrl: '172.31.44.96:8081', 
                    nexusVersion: 'nexus3', 
                    protocol: 'http', 
                    repository: nexusrepo,
                    version: version
                }


            }

        }
        stage('deploy to Nexus') {
            steps{
                sshagent(['tomcat8-1']) {
                    // copy war file to tomcat webapps
                    sh "scp -o StrictHostKeyChecking=no target/hue.war ec2-user@172.31.19.151:/opt/tomcat8/webapps/hue.war"
                    // stop and start the tomcat
                    sh "ssh ec2-user@172.31.19.151 /opt/tomcat8/bin/shutdown.sh"
                    sh "ssh ec2-user@172.31.19.151 /opt/tomcat8/bin/startup.sh"
            }

            }
        }
        stage('publish to sonarqube') {
            steps {
                withSonarQubeEnv('sonar7') {
                    sh 'mvn clean package sonar:sonar'
                }

            }
        }

    }


}